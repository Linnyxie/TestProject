#!/bin/sh
#
# An example hook script to check the commit log message.
# Called by "git commit" with one argument, the name of the file
# that has the commit message.  The hook should exit with non-zero
# status after issuing an appropriate message if it wants to stop the
# commit.  The hook is allowed to edit the commit message file.
#
# To enable this hook, rename this file to "commit-msg".

# Uncomment the below to add a Signed-off-by line to the message.
# Doing this in a hook is a bad idea in general, but the prepare-commit-msg
# hook is more suited to it.
#
# SOB=$(git var GIT_AUTHOR_IDENT | sed -n 's/^\(.*>\).*$/Signed-off-by: \1/p')
# grep -qs "^$SOB" "$1" || echo "$SOB" >> "$1"

# This example catches duplicate Signed-off-by lines.

test "" = "$(grep '^Signed-off-by: ' "$1" |
	 sort | uniq -c | sed -e '/^[ 	]*1[ 	]/d')" || {
	echo >&2 Duplicate Signed-off-by lines.
	exit 1
}


# 检测提交日志是否符合规范（TAPD源码关联提交的格式）
# 此处仅在提交前对日志信息进行了简单的格式判断、用以提醒提交者完善日志信息

# 日志的开头必须是三者之一或者多个、且后面不能为空：
# --story=
# --task=
# --bug=


log_message=$1
startstr=$(cat $log_message |awk '{printf "%s",$1}')
# echo "-- Log message --: `cat $log_message`"
# echo "-- Log message start with --: ${startstr%%=*}"

# 判断日志的开头是否为指定的三种字符串
if [ "${startstr%%=*}" == "--story" ] || [ "${startstr%%=*}" == "--task" ] || [ "${startstr%%=*}" == "--bug" ];then
#   如果是指定的开头，再判断等号之后的值是否为空
	if [ -z "${startstr#*=}" ];then
		echo "${startstr%%=*}= value is empty, please check it."
		exit 1
	fi
# 如果不是指定的开头，给出提示
else
	echo -e "Hey ~ ~ ~ \nLog message should start with: --story= or --task= or --bug="
	echo -e "You can get the key words from TAPD.\n"
	echo -e "Sample:\n--bug=1001593 --user=谢菊花 【---TAPD使用样例---】------5 https://www.tapd.cn/30694246/s/1004949\n"
	exit 1
fi
